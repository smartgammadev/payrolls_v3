<?php
/**
 * Contract
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * EvoliaApi
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.27
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Contract Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Contract implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Contract';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_contrat' => 'string',
'id_personne' => 'string',
'id_client' => 'int',
'code_mission' => 'string',
'ordre_client' => 'string',
'lieuxde_mission' => '\Swagger\Client\Model\MissionPlace',
'adresse1' => 'string',
'cp' => 'string',
'commune' => 'string',
'insee' => 'string',
'pays' => 'string',
'agence' => 'string',
'debut' => '\DateTime',
'fin_prevue' => '\DateTime',
'date_creation' => '\DateTime',
'categorie_salariale' => 'string',
'motif_embauche' => 'string',
'justification' => 'string',
'mission_a_risque_l23131' => 'bool',
'heure_de_presentation' => 'int',
'contract_order' => 'int',
'type_contrat' => 'int',
'date_effet' => '\DateTime',
'souplesse_debut' => '\DateTime',
'souplesse_fin' => '\DateTime',
'taux_paye' => 'float',
'taux_facture' => 'float',
'lot_facture' => 'string',
'duree_hebdo' => 'string',
'metier' => 'string',
'seuil_et_decompte' => 'string',
'code_pcs' => 'string',
'reference_analytique' => 'string',
'retour_signature_interimaire' => 'bool',
'retour_signature_client' => 'bool',
'rubriques_contratctuelles' => '\Swagger\Client\Model\ContractualData[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_contrat' => null,
'id_personne' => null,
'id_client' => 'int32',
'code_mission' => null,
'ordre_client' => null,
'lieuxde_mission' => null,
'adresse1' => null,
'cp' => null,
'commune' => null,
'insee' => null,
'pays' => null,
'agence' => null,
'debut' => 'date-time',
'fin_prevue' => 'date-time',
'date_creation' => 'date-time',
'categorie_salariale' => null,
'motif_embauche' => null,
'justification' => null,
'mission_a_risque_l23131' => null,
'heure_de_presentation' => 'int32',
'contract_order' => 'int32',
'type_contrat' => 'int32',
'date_effet' => 'date-time',
'souplesse_debut' => 'date-time',
'souplesse_fin' => 'date-time',
'taux_paye' => 'float',
'taux_facture' => 'float',
'lot_facture' => null,
'duree_hebdo' => null,
'metier' => null,
'seuil_et_decompte' => null,
'code_pcs' => null,
'reference_analytique' => null,
'retour_signature_interimaire' => null,
'retour_signature_client' => null,
'rubriques_contratctuelles' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_contrat' => 'idContrat',
'id_personne' => 'idPersonne',
'id_client' => 'idClient',
'code_mission' => 'codeMission',
'ordre_client' => 'ordreClient',
'lieuxde_mission' => 'lieuxdeMission',
'adresse1' => 'adresse1',
'cp' => 'cp',
'commune' => 'commune',
'insee' => 'insee',
'pays' => 'pays',
'agence' => 'agence',
'debut' => 'debut',
'fin_prevue' => 'finPrevue',
'date_creation' => 'dateCreation',
'categorie_salariale' => 'categorieSalariale',
'motif_embauche' => 'motifEmbauche',
'justification' => 'justification',
'mission_a_risque_l23131' => 'missionARisqueL23131',
'heure_de_presentation' => 'heureDePresentation',
'contract_order' => 'contractOrder',
'type_contrat' => 'typeContrat',
'date_effet' => 'dateEffet',
'souplesse_debut' => 'souplesseDebut',
'souplesse_fin' => 'souplesseFin',
'taux_paye' => 'tauxPaye',
'taux_facture' => 'tauxFacture',
'lot_facture' => 'lotFacture',
'duree_hebdo' => 'dureeHebdo',
'metier' => 'metier',
'seuil_et_decompte' => 'seuilEtDecompte',
'code_pcs' => 'codePCS',
'reference_analytique' => 'referenceAnalytique',
'retour_signature_interimaire' => 'retourSignatureInterimaire',
'retour_signature_client' => 'retourSignatureClient',
'rubriques_contratctuelles' => 'rubriquesContratctuelles'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_contrat' => 'setIdContrat',
'id_personne' => 'setIdPersonne',
'id_client' => 'setIdClient',
'code_mission' => 'setCodeMission',
'ordre_client' => 'setOrdreClient',
'lieuxde_mission' => 'setLieuxdeMission',
'adresse1' => 'setAdresse1',
'cp' => 'setCp',
'commune' => 'setCommune',
'insee' => 'setInsee',
'pays' => 'setPays',
'agence' => 'setAgence',
'debut' => 'setDebut',
'fin_prevue' => 'setFinPrevue',
'date_creation' => 'setDateCreation',
'categorie_salariale' => 'setCategorieSalariale',
'motif_embauche' => 'setMotifEmbauche',
'justification' => 'setJustification',
'mission_a_risque_l23131' => 'setMissionARisqueL23131',
'heure_de_presentation' => 'setHeureDePresentation',
'contract_order' => 'setContractOrder',
'type_contrat' => 'setTypeContrat',
'date_effet' => 'setDateEffet',
'souplesse_debut' => 'setSouplesseDebut',
'souplesse_fin' => 'setSouplesseFin',
'taux_paye' => 'setTauxPaye',
'taux_facture' => 'setTauxFacture',
'lot_facture' => 'setLotFacture',
'duree_hebdo' => 'setDureeHebdo',
'metier' => 'setMetier',
'seuil_et_decompte' => 'setSeuilEtDecompte',
'code_pcs' => 'setCodePcs',
'reference_analytique' => 'setReferenceAnalytique',
'retour_signature_interimaire' => 'setRetourSignatureInterimaire',
'retour_signature_client' => 'setRetourSignatureClient',
'rubriques_contratctuelles' => 'setRubriquesContratctuelles'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_contrat' => 'getIdContrat',
'id_personne' => 'getIdPersonne',
'id_client' => 'getIdClient',
'code_mission' => 'getCodeMission',
'ordre_client' => 'getOrdreClient',
'lieuxde_mission' => 'getLieuxdeMission',
'adresse1' => 'getAdresse1',
'cp' => 'getCp',
'commune' => 'getCommune',
'insee' => 'getInsee',
'pays' => 'getPays',
'agence' => 'getAgence',
'debut' => 'getDebut',
'fin_prevue' => 'getFinPrevue',
'date_creation' => 'getDateCreation',
'categorie_salariale' => 'getCategorieSalariale',
'motif_embauche' => 'getMotifEmbauche',
'justification' => 'getJustification',
'mission_a_risque_l23131' => 'getMissionARisqueL23131',
'heure_de_presentation' => 'getHeureDePresentation',
'contract_order' => 'getContractOrder',
'type_contrat' => 'getTypeContrat',
'date_effet' => 'getDateEffet',
'souplesse_debut' => 'getSouplesseDebut',
'souplesse_fin' => 'getSouplesseFin',
'taux_paye' => 'getTauxPaye',
'taux_facture' => 'getTauxFacture',
'lot_facture' => 'getLotFacture',
'duree_hebdo' => 'getDureeHebdo',
'metier' => 'getMetier',
'seuil_et_decompte' => 'getSeuilEtDecompte',
'code_pcs' => 'getCodePcs',
'reference_analytique' => 'getReferenceAnalytique',
'retour_signature_interimaire' => 'getRetourSignatureInterimaire',
'retour_signature_client' => 'getRetourSignatureClient',
'rubriques_contratctuelles' => 'getRubriquesContratctuelles'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_contrat'] = isset($data['id_contrat']) ? $data['id_contrat'] : null;
        $this->container['id_personne'] = isset($data['id_personne']) ? $data['id_personne'] : null;
        $this->container['id_client'] = isset($data['id_client']) ? $data['id_client'] : null;
        $this->container['code_mission'] = isset($data['code_mission']) ? $data['code_mission'] : null;
        $this->container['ordre_client'] = isset($data['ordre_client']) ? $data['ordre_client'] : null;
        $this->container['lieuxde_mission'] = isset($data['lieuxde_mission']) ? $data['lieuxde_mission'] : null;
        $this->container['adresse1'] = isset($data['adresse1']) ? $data['adresse1'] : null;
        $this->container['cp'] = isset($data['cp']) ? $data['cp'] : null;
        $this->container['commune'] = isset($data['commune']) ? $data['commune'] : null;
        $this->container['insee'] = isset($data['insee']) ? $data['insee'] : null;
        $this->container['pays'] = isset($data['pays']) ? $data['pays'] : null;
        $this->container['agence'] = isset($data['agence']) ? $data['agence'] : null;
        $this->container['debut'] = isset($data['debut']) ? $data['debut'] : null;
        $this->container['fin_prevue'] = isset($data['fin_prevue']) ? $data['fin_prevue'] : null;
        $this->container['date_creation'] = isset($data['date_creation']) ? $data['date_creation'] : null;
        $this->container['categorie_salariale'] = isset($data['categorie_salariale']) ? $data['categorie_salariale'] : null;
        $this->container['motif_embauche'] = isset($data['motif_embauche']) ? $data['motif_embauche'] : null;
        $this->container['justification'] = isset($data['justification']) ? $data['justification'] : null;
        $this->container['mission_a_risque_l23131'] = isset($data['mission_a_risque_l23131']) ? $data['mission_a_risque_l23131'] : null;
        $this->container['heure_de_presentation'] = isset($data['heure_de_presentation']) ? $data['heure_de_presentation'] : null;
        $this->container['contract_order'] = isset($data['contract_order']) ? $data['contract_order'] : null;
        $this->container['type_contrat'] = isset($data['type_contrat']) ? $data['type_contrat'] : null;
        $this->container['date_effet'] = isset($data['date_effet']) ? $data['date_effet'] : null;
        $this->container['souplesse_debut'] = isset($data['souplesse_debut']) ? $data['souplesse_debut'] : null;
        $this->container['souplesse_fin'] = isset($data['souplesse_fin']) ? $data['souplesse_fin'] : null;
        $this->container['taux_paye'] = isset($data['taux_paye']) ? $data['taux_paye'] : null;
        $this->container['taux_facture'] = isset($data['taux_facture']) ? $data['taux_facture'] : null;
        $this->container['lot_facture'] = isset($data['lot_facture']) ? $data['lot_facture'] : null;
        $this->container['duree_hebdo'] = isset($data['duree_hebdo']) ? $data['duree_hebdo'] : null;
        $this->container['metier'] = isset($data['metier']) ? $data['metier'] : null;
        $this->container['seuil_et_decompte'] = isset($data['seuil_et_decompte']) ? $data['seuil_et_decompte'] : null;
        $this->container['code_pcs'] = isset($data['code_pcs']) ? $data['code_pcs'] : null;
        $this->container['reference_analytique'] = isset($data['reference_analytique']) ? $data['reference_analytique'] : null;
        $this->container['retour_signature_interimaire'] = isset($data['retour_signature_interimaire']) ? $data['retour_signature_interimaire'] : null;
        $this->container['retour_signature_client'] = isset($data['retour_signature_client']) ? $data['retour_signature_client'] : null;
        $this->container['rubriques_contratctuelles'] = isset($data['rubriques_contratctuelles']) ? $data['rubriques_contratctuelles'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_contrat
     *
     * @return string
     */
    public function getIdContrat()
    {
        return $this->container['id_contrat'];
    }

    /**
     * Sets id_contrat
     *
     * @param string $id_contrat id_contrat
     *
     * @return $this
     */
    public function setIdContrat($id_contrat)
    {
        $this->container['id_contrat'] = $id_contrat;

        return $this;
    }

    /**
     * Gets id_personne
     *
     * @return string
     */
    public function getIdPersonne()
    {
        return $this->container['id_personne'];
    }

    /**
     * Sets id_personne
     *
     * @param string $id_personne id_personne
     *
     * @return $this
     */
    public function setIdPersonne($id_personne)
    {
        $this->container['id_personne'] = $id_personne;

        return $this;
    }

    /**
     * Gets id_client
     *
     * @return int
     */
    public function getIdClient()
    {
        return $this->container['id_client'];
    }

    /**
     * Sets id_client
     *
     * @param int $id_client id_client
     *
     * @return $this
     */
    public function setIdClient($id_client)
    {
        $this->container['id_client'] = $id_client;

        return $this;
    }

    /**
     * Gets code_mission
     *
     * @return string
     */
    public function getCodeMission()
    {
        return $this->container['code_mission'];
    }

    /**
     * Sets code_mission
     *
     * @param string $code_mission code_mission
     *
     * @return $this
     */
    public function setCodeMission($code_mission)
    {
        $this->container['code_mission'] = $code_mission;

        return $this;
    }

    /**
     * Gets ordre_client
     *
     * @return string
     */
    public function getOrdreClient()
    {
        return $this->container['ordre_client'];
    }

    /**
     * Sets ordre_client
     *
     * @param string $ordre_client ordre_client
     *
     * @return $this
     */
    public function setOrdreClient($ordre_client)
    {
        $this->container['ordre_client'] = $ordre_client;

        return $this;
    }

    /**
     * Gets lieuxde_mission
     *
     * @return \Swagger\Client\Model\MissionPlace
     */
    public function getLieuxdeMission()
    {
        return $this->container['lieuxde_mission'];
    }

    /**
     * Sets lieuxde_mission
     *
     * @param \Swagger\Client\Model\MissionPlace $lieuxde_mission lieuxde_mission
     *
     * @return $this
     */
    public function setLieuxdeMission($lieuxde_mission)
    {
        $this->container['lieuxde_mission'] = $lieuxde_mission;

        return $this;
    }

    /**
     * Gets adresse1
     *
     * @return string
     */
    public function getAdresse1()
    {
        return $this->container['adresse1'];
    }

    /**
     * Sets adresse1
     *
     * @param string $adresse1 adresse1
     *
     * @return $this
     */
    public function setAdresse1($adresse1)
    {
        $this->container['adresse1'] = $adresse1;

        return $this;
    }

    /**
     * Gets cp
     *
     * @return string
     */
    public function getCp()
    {
        return $this->container['cp'];
    }

    /**
     * Sets cp
     *
     * @param string $cp cp
     *
     * @return $this
     */
    public function setCp($cp)
    {
        $this->container['cp'] = $cp;

        return $this;
    }

    /**
     * Gets commune
     *
     * @return string
     */
    public function getCommune()
    {
        return $this->container['commune'];
    }

    /**
     * Sets commune
     *
     * @param string $commune commune
     *
     * @return $this
     */
    public function setCommune($commune)
    {
        $this->container['commune'] = $commune;

        return $this;
    }

    /**
     * Gets insee
     *
     * @return string
     */
    public function getInsee()
    {
        return $this->container['insee'];
    }

    /**
     * Sets insee
     *
     * @param string $insee insee
     *
     * @return $this
     */
    public function setInsee($insee)
    {
        $this->container['insee'] = $insee;

        return $this;
    }

    /**
     * Gets pays
     *
     * @return string
     */
    public function getPays()
    {
        return $this->container['pays'];
    }

    /**
     * Sets pays
     *
     * @param string $pays pays
     *
     * @return $this
     */
    public function setPays($pays)
    {
        $this->container['pays'] = $pays;

        return $this;
    }

    /**
     * Gets agence
     *
     * @return string
     */
    public function getAgence()
    {
        return $this->container['agence'];
    }

    /**
     * Sets agence
     *
     * @param string $agence agence
     *
     * @return $this
     */
    public function setAgence($agence)
    {
        $this->container['agence'] = $agence;

        return $this;
    }

    /**
     * Gets debut
     *
     * @return \DateTime
     */
    public function getDebut()
    {
        return $this->container['debut'];
    }

    /**
     * Sets debut
     *
     * @param \DateTime $debut debut
     *
     * @return $this
     */
    public function setDebut($debut)
    {
        $this->container['debut'] = $debut;

        return $this;
    }

    /**
     * Gets fin_prevue
     *
     * @return \DateTime
     */
    public function getFinPrevue()
    {
        return $this->container['fin_prevue'];
    }

    /**
     * Sets fin_prevue
     *
     * @param \DateTime $fin_prevue fin_prevue
     *
     * @return $this
     */
    public function setFinPrevue($fin_prevue)
    {
        $this->container['fin_prevue'] = $fin_prevue;

        return $this;
    }

    /**
     * Gets date_creation
     *
     * @return \DateTime
     */
    public function getDateCreation()
    {
        return $this->container['date_creation'];
    }

    /**
     * Sets date_creation
     *
     * @param \DateTime $date_creation date_creation
     *
     * @return $this
     */
    public function setDateCreation($date_creation)
    {
        $this->container['date_creation'] = $date_creation;

        return $this;
    }

    /**
     * Gets categorie_salariale
     *
     * @return string
     */
    public function getCategorieSalariale()
    {
        return $this->container['categorie_salariale'];
    }

    /**
     * Sets categorie_salariale
     *
     * @param string $categorie_salariale categorie_salariale
     *
     * @return $this
     */
    public function setCategorieSalariale($categorie_salariale)
    {
        $this->container['categorie_salariale'] = $categorie_salariale;

        return $this;
    }

    /**
     * Gets motif_embauche
     *
     * @return string
     */
    public function getMotifEmbauche()
    {
        return $this->container['motif_embauche'];
    }

    /**
     * Sets motif_embauche
     *
     * @param string $motif_embauche motif_embauche
     *
     * @return $this
     */
    public function setMotifEmbauche($motif_embauche)
    {
        $this->container['motif_embauche'] = $motif_embauche;

        return $this;
    }

    /**
     * Gets justification
     *
     * @return string
     */
    public function getJustification()
    {
        return $this->container['justification'];
    }

    /**
     * Sets justification
     *
     * @param string $justification justification
     *
     * @return $this
     */
    public function setJustification($justification)
    {
        $this->container['justification'] = $justification;

        return $this;
    }

    /**
     * Gets mission_a_risque_l23131
     *
     * @return bool
     */
    public function getMissionARisqueL23131()
    {
        return $this->container['mission_a_risque_l23131'];
    }

    /**
     * Sets mission_a_risque_l23131
     *
     * @param bool $mission_a_risque_l23131 mission_a_risque_l23131
     *
     * @return $this
     */
    public function setMissionARisqueL23131($mission_a_risque_l23131)
    {
        $this->container['mission_a_risque_l23131'] = $mission_a_risque_l23131;

        return $this;
    }

    /**
     * Gets heure_de_presentation
     *
     * @return int
     */
    public function getHeureDePresentation()
    {
        return $this->container['heure_de_presentation'];
    }

    /**
     * Sets heure_de_presentation
     *
     * @param int $heure_de_presentation heure_de_presentation
     *
     * @return $this
     */
    public function setHeureDePresentation($heure_de_presentation)
    {
        $this->container['heure_de_presentation'] = $heure_de_presentation;

        return $this;
    }

    /**
     * Gets contract_order
     *
     * @return int
     */
    public function getContractOrder()
    {
        return $this->container['contract_order'];
    }

    /**
     * Sets contract_order
     *
     * @param int $contract_order contract_order
     *
     * @return $this
     */
    public function setContractOrder($contract_order)
    {
        $this->container['contract_order'] = $contract_order;

        return $this;
    }

    /**
     * Gets type_contrat
     *
     * @return int
     */
    public function getTypeContrat()
    {
        return $this->container['type_contrat'];
    }

    /**
     * Sets type_contrat
     *
     * @param int $type_contrat type_contrat
     *
     * @return $this
     */
    public function setTypeContrat($type_contrat)
    {
        $this->container['type_contrat'] = $type_contrat;

        return $this;
    }

    /**
     * Gets date_effet
     *
     * @return \DateTime
     */
    public function getDateEffet()
    {
        return $this->container['date_effet'];
    }

    /**
     * Sets date_effet
     *
     * @param \DateTime $date_effet date_effet
     *
     * @return $this
     */
    public function setDateEffet($date_effet)
    {
        $this->container['date_effet'] = $date_effet;

        return $this;
    }

    /**
     * Gets souplesse_debut
     *
     * @return \DateTime
     */
    public function getSouplesseDebut()
    {
        return $this->container['souplesse_debut'];
    }

    /**
     * Sets souplesse_debut
     *
     * @param \DateTime $souplesse_debut souplesse_debut
     *
     * @return $this
     */
    public function setSouplesseDebut($souplesse_debut)
    {
        $this->container['souplesse_debut'] = $souplesse_debut;

        return $this;
    }

    /**
     * Gets souplesse_fin
     *
     * @return \DateTime
     */
    public function getSouplesseFin()
    {
        return $this->container['souplesse_fin'];
    }

    /**
     * Sets souplesse_fin
     *
     * @param \DateTime $souplesse_fin souplesse_fin
     *
     * @return $this
     */
    public function setSouplesseFin($souplesse_fin)
    {
        $this->container['souplesse_fin'] = $souplesse_fin;

        return $this;
    }

    /**
     * Gets taux_paye
     *
     * @return float
     */
    public function getTauxPaye()
    {
        return $this->container['taux_paye'];
    }

    /**
     * Sets taux_paye
     *
     * @param float $taux_paye taux_paye
     *
     * @return $this
     */
    public function setTauxPaye($taux_paye)
    {
        $this->container['taux_paye'] = $taux_paye;

        return $this;
    }

    /**
     * Gets taux_facture
     *
     * @return float
     */
    public function getTauxFacture()
    {
        return $this->container['taux_facture'];
    }

    /**
     * Sets taux_facture
     *
     * @param float $taux_facture taux_facture
     *
     * @return $this
     */
    public function setTauxFacture($taux_facture)
    {
        $this->container['taux_facture'] = $taux_facture;

        return $this;
    }

    /**
     * Gets lot_facture
     *
     * @return string
     */
    public function getLotFacture()
    {
        return $this->container['lot_facture'];
    }

    /**
     * Sets lot_facture
     *
     * @param string $lot_facture lot_facture
     *
     * @return $this
     */
    public function setLotFacture($lot_facture)
    {
        $this->container['lot_facture'] = $lot_facture;

        return $this;
    }

    /**
     * Gets duree_hebdo
     *
     * @return string
     */
    public function getDureeHebdo()
    {
        return $this->container['duree_hebdo'];
    }

    /**
     * Sets duree_hebdo
     *
     * @param string $duree_hebdo duree_hebdo
     *
     * @return $this
     */
    public function setDureeHebdo($duree_hebdo)
    {
        $this->container['duree_hebdo'] = $duree_hebdo;

        return $this;
    }

    /**
     * Gets metier
     *
     * @return string
     */
    public function getMetier()
    {
        return $this->container['metier'];
    }

    /**
     * Sets metier
     *
     * @param string $metier metier
     *
     * @return $this
     */
    public function setMetier($metier)
    {
        $this->container['metier'] = $metier;

        return $this;
    }

    /**
     * Gets seuil_et_decompte
     *
     * @return string
     */
    public function getSeuilEtDecompte()
    {
        return $this->container['seuil_et_decompte'];
    }

    /**
     * Sets seuil_et_decompte
     *
     * @param string $seuil_et_decompte seuil_et_decompte
     *
     * @return $this
     */
    public function setSeuilEtDecompte($seuil_et_decompte)
    {
        $this->container['seuil_et_decompte'] = $seuil_et_decompte;

        return $this;
    }

    /**
     * Gets code_pcs
     *
     * @return string
     */
    public function getCodePcs()
    {
        return $this->container['code_pcs'];
    }

    /**
     * Sets code_pcs
     *
     * @param string $code_pcs code_pcs
     *
     * @return $this
     */
    public function setCodePcs($code_pcs)
    {
        $this->container['code_pcs'] = $code_pcs;

        return $this;
    }

    /**
     * Gets reference_analytique
     *
     * @return string
     */
    public function getReferenceAnalytique()
    {
        return $this->container['reference_analytique'];
    }

    /**
     * Sets reference_analytique
     *
     * @param string $reference_analytique reference_analytique
     *
     * @return $this
     */
    public function setReferenceAnalytique($reference_analytique)
    {
        $this->container['reference_analytique'] = $reference_analytique;

        return $this;
    }

    /**
     * Gets retour_signature_interimaire
     *
     * @return bool
     */
    public function getRetourSignatureInterimaire()
    {
        return $this->container['retour_signature_interimaire'];
    }

    /**
     * Sets retour_signature_interimaire
     *
     * @param bool $retour_signature_interimaire retour_signature_interimaire
     *
     * @return $this
     */
    public function setRetourSignatureInterimaire($retour_signature_interimaire)
    {
        $this->container['retour_signature_interimaire'] = $retour_signature_interimaire;

        return $this;
    }

    /**
     * Gets retour_signature_client
     *
     * @return bool
     */
    public function getRetourSignatureClient()
    {
        return $this->container['retour_signature_client'];
    }

    /**
     * Sets retour_signature_client
     *
     * @param bool $retour_signature_client retour_signature_client
     *
     * @return $this
     */
    public function setRetourSignatureClient($retour_signature_client)
    {
        $this->container['retour_signature_client'] = $retour_signature_client;

        return $this;
    }

    /**
     * Gets rubriques_contratctuelles
     *
     * @return \Swagger\Client\Model\ContractualData[]
     */
    public function getRubriquesContratctuelles()
    {
        return $this->container['rubriques_contratctuelles'];
    }

    /**
     * Sets rubriques_contratctuelles
     *
     * @param \Swagger\Client\Model\ContractualData[] $rubriques_contratctuelles rubriques_contratctuelles
     *
     * @return $this
     */
    public function setRubriquesContratctuelles($rubriques_contratctuelles)
    {
        $this->container['rubriques_contratctuelles'] = $rubriques_contratctuelles;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
